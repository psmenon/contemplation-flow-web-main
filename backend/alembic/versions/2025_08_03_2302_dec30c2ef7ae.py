"""initial_schema_fresh

Revision ID: dec30c2ef7ae
Revises: 
Create Date: 2025-08-03 23:02:43.714286

"""
from typing import Sequence, Union

import pgvector
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Text


# revision identifiers, used by Alembic.
revision: str = 'dec30c2ef7ae'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('otp_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('otpless_request_id', sa.String(), nullable=False),
    sa.Column('session_type', postgresql.ENUM('REGISTER', 'LOGIN', 'VERIFICATION', name='otp_session_type_enum'), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'VERIFIED', 'EXPIRED', 'FAILED', name='otp_status_enum'), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('max_attempts', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_otp_sessions_phone_expires', 'otp_sessions', ['phone_number', 'expires_at'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_active_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('phone_verified', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role', postgresql.ENUM('USER', 'ADMIN', name='user_role_enum'), nullable=False),
    sa.Column('is_signed_in', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index('idx_user_profile_last_active', 'user_profiles', ['last_active_at'], unique=False)
    op.create_index('idx_user_profile_phone', 'user_profiles', ['phone_number'], unique=False)
    op.create_index('idx_user_profile_role', 'user_profiles', ['role'], unique=False)
    op.create_index('idx_user_profiles_phone', 'user_profiles', ['phone_number'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_conversation_created_at', 'conversations', ['created_at'], unique=False)
    op.create_index('idx_conversation_deleted_at', 'conversations', ['deleted_at'], unique=False)
    op.create_index('idx_conversation_user_id', 'conversations', ['user_id'], unique=False)
    op.create_table('source_documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('file_size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('status', postgresql.ENUM('PROCESSING', 'COMPLETED', 'FAILED', name='document_status_enum'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_source_document_active', 'source_documents', ['active'], unique=False)
    op.create_index('idx_source_document_created_at', 'source_documents', ['created_at'], unique=False)
    op.create_index('idx_source_document_status', 'source_documents', ['status'], unique=False)
    op.create_index('idx_source_documents_active', 'source_documents', ['active', 'status'], unique=False)
    op.create_table('document_chunks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('source_document_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=False),
    sa.Column('location', sa.Text(), nullable=False),
    sa.Column('model_used', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['source_document_id'], ['source_documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_chunk_embedding', 'document_chunks', ['embedding'], unique=False, postgresql_using='ivfflat')
    op.create_index('idx_document_chunk_model', 'document_chunks', ['model_used'], unique=False)
    op.create_index('idx_document_chunk_source_id', 'document_chunks', ['source_document_id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('role', postgresql.ENUM('USER', 'ASSISTANT', name='message_role_enum'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('citations', postgresql.JSONB(), nullable=True),
    sa.Column('follow_up_questions', postgresql.JSONB(), nullable=True),
    sa.Column('feedback_type', postgresql.ENUM('POSITIVE', 'NEGATIVE', name='feedback_type_enum'), nullable=True),
    sa.Column('feedback_given_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('feedback_comment', sa.Text(), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('input_tokens', sa.Integer(), nullable=True),
    sa.Column('output_tokens', sa.Integer(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('model_used', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_message_conversation_created', 'messages', ['conversation_id', 'created_at'], unique=False)
    op.create_index('idx_message_conversation_id', 'messages', ['conversation_id'], unique=False)
    op.create_index('idx_message_created_at', 'messages', ['created_at'], unique=False)
    op.create_index('idx_message_role', 'messages', ['role'], unique=False)
    op.create_table('content_generations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('content_type', postgresql.ENUM('IMAGE', 'VIDEO', 'AUDIO', name='content_type_enum'), nullable=False),
    sa.Column('content_path', sa.String(), nullable=True),
    sa.Column('cc_text', sa.Text(), nullable=True),
    sa.Column('cc_theme', sa.String(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('voice_id', sa.String(), nullable=True),
    sa.Column('transcript', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_content_generation_conversation_id', 'content_generations', ['conversation_id'], unique=False)
    op.create_index('idx_content_generation_created_at', 'content_generations', ['created_at'], unique=False)
    op.create_index('idx_content_generation_type', 'content_generations', ['content_type'], unique=False)
    op.create_index('idx_content_generation_user_id', 'content_generations', ['user_id'], unique=False)
    op.create_index('idx_content_generations_type', 'content_generations', ['content_type'], unique=False)
    op.create_index('idx_content_generations_user_created', 'content_generations', ['user_id', 'created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_content_generations_user_created', table_name='content_generations')
    op.drop_index('idx_content_generations_type', table_name='content_generations')
    op.drop_index('idx_content_generation_user_id', table_name='content_generations')
    op.drop_index('idx_content_generation_type', table_name='content_generations')
    op.drop_index('idx_content_generation_created_at', table_name='content_generations')
    op.drop_index('idx_content_generation_conversation_id', table_name='content_generations')
    op.drop_table('content_generations')
    op.drop_index('idx_message_role', table_name='messages')
    op.drop_index('idx_message_created_at', table_name='messages')
    op.drop_index('idx_message_conversation_id', table_name='messages')
    op.drop_index('idx_message_conversation_created', table_name='messages')
    op.drop_table('messages')
    op.drop_index('idx_document_chunk_source_id', table_name='document_chunks')
    op.drop_index('idx_document_chunk_model', table_name='document_chunks')
    op.drop_index('idx_document_chunk_embedding', table_name='document_chunks', postgresql_using='ivfflat')
    op.drop_table('document_chunks')
    op.drop_index('idx_source_documents_active', table_name='source_documents')
    op.drop_index('idx_source_document_status', table_name='source_documents')
    op.drop_index('idx_source_document_created_at', table_name='source_documents')
    op.drop_index('idx_source_document_active', table_name='source_documents')
    op.drop_table('source_documents')
    op.drop_index('idx_conversation_user_id', table_name='conversations')
    op.drop_index('idx_conversation_deleted_at', table_name='conversations')
    op.drop_index('idx_conversation_created_at', table_name='conversations')
    op.drop_table('conversations')
    op.drop_index('idx_user_profiles_phone', table_name='user_profiles')
    op.drop_index('idx_user_profile_role', table_name='user_profiles')
    op.drop_index('idx_user_profile_phone', table_name='user_profiles')
    op.drop_index('idx_user_profile_last_active', table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index('idx_otp_sessions_phone_expires', table_name='otp_sessions')
    op.drop_table('otp_sessions')
    # ### end Alembic commands ###
