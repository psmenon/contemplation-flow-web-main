"""remove weekly reports and system config

Revision ID: e31749688895
Revises: f44ef7a8f38b
Create Date: 2025-07-05 15:49:37.710185

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e31749688895'
down_revision: Union[str, Sequence[str], None] = 'f44ef7a8f38b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_activity_logs_user_created'), table_name='activity_logs')
    op.drop_table('activity_logs')
    op.drop_table('system_config')
    op.drop_index(op.f('idx_weekly_analytics_week_type'), table_name='weekly_analytics')
    op.drop_table('weekly_analytics')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('weekly_analytics',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('week_start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('resource_type', postgresql.ENUM('CHUNK', 'DOCUMENT', 'MESSAGE', 'CONVERSATION', 'MEDITATION', 'CONTEMPLATION_CARD', name='analytics_resource_type_enum'), autoincrement=False, nullable=False),
    sa.Column('resource_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('hit_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('weekly_analytics_pkey')),
    sa.UniqueConstraint('week_start_date', 'resource_type', 'resource_id', name=op.f('unique_weekly_analytics'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('idx_weekly_analytics_week_type'), 'weekly_analytics', ['week_start_date', 'resource_type'], unique=False)
    op.create_table('system_config',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('config_key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('config_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('config_type', postgresql.ENUM('STRING', 'NUMBER', 'BOOLEAN', 'JSON', name='config_type_enum'), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('system_config_pkey')),
    sa.UniqueConstraint('config_key', name=op.f('system_config_config_key_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('activity_logs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('resource_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('resource_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], name=op.f('activity_logs_user_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('activity_logs_pkey'))
    )
    op.create_index(op.f('idx_activity_logs_user_created'), 'activity_logs', ['user_id', 'created_at'], unique=False)
    # ### end Alembic commands ###
